name: "MPTCP Upstream Build Validation"
on:
  push:
    branches:
      - export
      - refs/tags/patchew/*

jobs:
  build:
    name: "Build (matrix)"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        defconfig: ['x86_64', 'i386']
        ipv6: ['with_ipv6', 'without_ipv6']
        mptcp: ['with_mptcp', 'without_mptcp']
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 100 # we should not have more commits on top of net-next/export
      - name: "Setup cache for CCache"
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.ccache
          key: ${{ runner.os }}-build-${{ matrix.defconfig }}-${{ matrix.ipv6 }}-${{ matrix.mptcp }}-${{ github.run_id }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ matrix.defconfig }}-${{ matrix.ipv6 }}-${{ matrix.mptcp }}-
      - name: "Build Validation"
        uses: multipath-tcp/mptcp-upstream-validate-export-action@main
        with:
          each_commit: true
          ccache_maxsize: 620M ## 5/2^3=625: 5GB = project limit ; 2^3 = matrix
          defconfig: ${{ matrix.defconfig }}
          ipv6: ${{ matrix.ipv6 }}
          mptcp: ${{ matrix.mptcp }}
  notif:
    name: "IRC Notif"
    needs: build
    if: ${{ always() }} && github.repository_owner == 'multipath-tcp'
    runs-on: ubuntu-latest
    steps:
      - name: "IRC notification"
        uses: rectalogic/notify-irc@v1
        with:
          channel: "#MPTCPUpstream"
          nickname: gh-build-bot
          message: "New build validating ${{ github.ref }} ended with ${{ needs.build.result }} (started by ${{ github.actor }}): https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
